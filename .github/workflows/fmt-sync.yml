name: Auto Sync FMT JSON + VD-41 Cycle

on:
  workflow_dispatch:
    inputs:
      force_vd_41_cycle:
        description: 'Trigger VD-41 reassignment manually'
        required: false
        default: 'false'
  schedule:
    - cron: '0 * * * *'
  push:
    paths:
      - fmt-state.json

permissions:
  contents: write

jobs:
  fmt_json_sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate JSON Format
        run: |
          if ! jq empty fmt-state.json; then
            echo "‚ùå fmt-state.json is not valid JSON"
            exit 5
          fi

      - name: Detect and Add New VDs
        run: |
          known_vds=$(jq -r '.vds | keys[]' fmt-state.json)
          for i in $(seq 1 100); do
            vd_id=$(printf "VD-%02d" $i)
            if ! echo "$known_vds" | grep -q "$vd_id"; then
              echo "‚ûï Adding $vd_id to JSON"
              jq --arg vd "$vd_id" '.vds[$vd] = {"task": "Pending Assignment", "status": "Idle"}' fmt-state.json > tmp.json && mv tmp.json fmt-state.json
            fi
          done

      - name: Run VD-41 Audit & Reassignment
        run: |
          echo "üîé Starting VD-41 reassignment cycle..."
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          LOG='{"timestamp":"'$TIMESTAMP'","cycle":"auto","reassignments":[],"notes":"Cycle completed."}'
          updated=false
          mapfile -t ids < <(jq -r '.vds | keys[]' fmt-state.json)
          for id in "${ids[@]}"; do
            task=$(jq -r --arg id "$id" '.vds[$id].task' fmt-state.json)
            status=$(jq -r --arg id "$id" '.vds[$id].status' fmt-state.json)
            is_protected=$(jq -r --arg id "$id" '.vds[$id].protected // false' fmt-state.json)
if [[ "$is_protected" == "true" ]]; then
  echo "üõ°Ô∏è Skipping protected $id"
  continue
fi
            if [[ "$task" == "Pending Assignment" && "$status" == "Idle" ]]; then
              echo "‚ôªÔ∏è Reassigning $id"
              jq --arg id "$id" '.vds[$id].task = "Reassigned by VD-41"' fmt-state.json > tmp.json && mv tmp.json fmt-state.json
              jq --arg id "$id" '.vds[$id].status = "Reassigned"' fmt-state.json > tmp.json && mv tmp.json fmt-state.json
              LOG=$(echo "$LOG" | jq --arg id "$id" '.reassignments += [{"vd":$id,"reason":"Idle with no task"}]')
              updated=true
            fi
          done
          if [ "$updated" = true ]; then
            jq --argjson entry "$LOG" '.vd_41_log += [$entry]' fmt-state.json > tmp.json && mv tmp.json fmt-state.json
            echo "üì¶ VD-41 log updated."
          else
            echo "‚úÖ No reassignments needed."
          fi

      - name: Update Timestamp
        run: |
          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          jq --arg ts "$TS" '.metadata.last_updated = $ts' fmt-state.json > tmp.json && mv tmp.json fmt-state.json

      - name: Commit and Push
        run: |
          git config user.name "fmt-bot"
          git config user.email "bot@fmt.dev"
          git add fmt-state.json
          git diff --cached --quiet || git commit -m "Auto-sync: Timestamp and VD-41 audit"
          git push https://x-access-token:${{ secrets.PAT_PUSH_TOKEN }}@github.com/${{ github.repository }} HEAD:main

  vd_41_manual_trigger:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.force_vd_41_cycle == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Re-run Shared VD-41 Logic
        run: echo "‚Ü™Ô∏è Manual trigger will be linked to audit logic in future update."
