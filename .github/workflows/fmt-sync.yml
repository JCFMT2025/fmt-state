name: Auto Sync FMT Core + VD-41 Cycle

on:
  workflow_dispatch:
    inputs:
      force_vd_41_cycle:
        description: 'Trigger VD-41 reassignment manually'
        required: false
        default: 'false'
  schedule:
    - cron: '0 * * * *'
  push:
    paths:
      - fmt-core-state.json
      - fmt-history.json
      - fmt-state/architects-notes/**

permissions:
  contents: write

jobs:
  sync_core_json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Validate Core Files Exist and Format
        run: |
          test -f fmt-core-state.json || (echo "‚ùå Missing fmt-core-state.json" && exit 1)
          test -f fmt-history.json || (echo "‚ùå Missing fmt-history.json" && exit 1)
          if ! jq empty fmt-core-state.json; then
            echo "‚ùå fmt-core-state.json is not valid JSON"
            exit 5
          fi
          if ! jq empty fmt-history.json; then
            echo "‚ùå fmt-history.json is not valid JSON"
            exit 6
          fi
          count=$(ls fmt-state/architects-notes/*.txt 2>/dev/null | wc -l)
          if [ "$count" -eq 0 ]; then
            echo "‚ùå No architect notes found"
            exit 7
          fi
          echo "‚úÖ All files validated."

      - name: Run VD-41 Audit & Reassignment
        run: |
          echo "üîé Starting VD-41 reassignment cycle..."
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          LOG='{"timestamp":"'$TIMESTAMP'","cycle":"auto","reassignments":[],"notes":"Cycle complete."}'
          updated=false
          mapfile -t ids < <(jq -r '.vds | keys[]' fmt-core-state.json)
          for id in "${ids[@]}"; do
            task=$(jq -r --arg id "$id" '.vds[$id].task' fmt-core-state.json)
            status=$(jq -r --arg id "$id" '.vds[$id].status' fmt-core-state.json)
            is_protected=$(jq -r --arg id "$id" '.vds[$id].protected // false' fmt-core-state.json)
            if [[ "$is_protected" == "true" ]]; then
              echo "üõ°Ô∏è Skipping protected $id"
              continue
            fi
            if [[ "$task" == "Pending Assignment" && "$status" == "Idle" ]]; then
              echo "‚ôªÔ∏è Reassigning $id"
              jq --arg id "$id" '.vds[$id].task = "Reassigned by VD-41"' fmt-core-state.json > tmp.json && mv tmp.json fmt-core-state.json
              jq --arg id "$id" '.vds[$id].status = "Reassigned"' fmt-core-state.json > tmp.json && mv tmp.json fmt-core-state.json
              LOG=$(echo "$LOG" | jq --arg id "$id" '.reassignments += [{"vd":$id,"reason":"Idle with no task"}]')
              updated=true
            fi
          done
          if [ "$updated" = true ]; then
            jq --argjson entry "$LOG" '.vd_41_log += [$entry]' fmt-core-state.json > tmp.json && mv tmp.json fmt-core-state.json
            echo "üì¶ VD-41 log updated."
          else
            echo "‚úÖ No reassignments needed."
          fi

      - name: Update Timestamp
        run: |
          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          jq --arg ts "$TS" '.metadata.last_updated = $ts' fmt-core-state.json > tmp.json && mv tmp.json fmt-core-state.json

      - name: Commit and Push
        run: |
          git config user.name "fmt-bot"
          git config user.email "bot@fmt.dev"
          git add fmt-core-state.json
          git diff --cached --quiet || git commit -m "Auto-sync: Core state + VD-41 audit"
          git push --force https://x-access-token:${{ secrets.PAT_PUSH_TOKEN }}@github.com/${{ github.repository }} HEAD:main

  vd_41_manual_trigger:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.force_vd_41_cycle == 'true' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Re-run Shared VD-41 Logic
        run: echo "‚Ü™Ô∏è Manual trigger will be linked to audit logic in future update."
